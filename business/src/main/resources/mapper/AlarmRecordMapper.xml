<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyfx.business.dao.AlarmRecordMapper">
    <resultMap id="BaseResultMap" type="com.wyfx.business.entity.AlarmRecord">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="record_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="aid" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="is_view" javaType="java.lang.Boolean" jdbcType="TINYINT"/>
            <arg column="bid" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="pid" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="message" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="send_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="longitude" javaType="java.lang.Double" jdbcType="DOUBLE"/>
            <arg column="latitude" javaType="java.lang.Double" jdbcType="DOUBLE"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, record_time, aid, is_view, bid ,pid, message, send_name,longitude,latitude
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from alarm_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from alarm_record
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteAll">
        delete from alarm_record
    </delete>
    <insert id="insert" parameterType="com.wyfx.business.entity.AlarmRecord">
        insert into alarm_record (id, record_time, aid,
        is_view, bid, pid ,message,send_name,longitude,latitude
        )
        values (#{id,jdbcType=BIGINT}, #{recordTime,jdbcType=TIMESTAMP},#{aid,jdbcType=BIGINT},
        #{isView,jdbcType=TINYINT}, #{bid,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{message,jdbcType=VARCHAR},
        #{send_name,jdbcType=VARCHAR},#{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE})
    </insert>
    <insert id="insertSelective" parameterType="com.wyfx.business.entity.AlarmRecord">
        insert into alarm_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="recordTime != null">
                record_time,
            </if>
            <if test="aid != null">
                aid,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="isView != null">
                is_view,
            </if>
            <if test="bid != null">
                bid,
            </if>
            <if test="message != null">
                message,
            </if>
            <if test="sendName != null">
                send_name,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="recordTime != null">
                #{recordTime,jdbcType=TIMESTAMP},
            </if>
            <if test="aid != null">
                #{aid,jdbcType=BIGINT},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=BIGINT},
            </if>
            <if test="isView != null">
                #{isView,jdbcType=TINYINT},
            </if>
            <if test="bid != null">
                #{bid,jdbcType=BIGINT},
            </if>
            <if test="message != null">
                #{message,jdbcType=VARCHAR},
            </if>
            <if test="sendName != null">
                #{sendName,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wyfx.business.entity.AlarmRecord">
        update alarm_record
        <set>
            <if test="recordTime != null">
                record_time = #{recordTime,jdbcType=TIMESTAMP},
            </if>
            <if test="aid != null">
                aid = #{aid,jdbcType=BIGINT},
            </if>
            <if test="isView != null">
                is_view = #{isView,jdbcType=TINYINT},
            </if>
            <if test="bid != null">
                bid = #{bid,jdbcType=BIGINT},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=BIGINT},
            </if>
            <if test="message != null">
                message = #{message,jdbcType=VARCHAR}
            </if>
            <if test="sendName != null">
                send_name = #{sendName,jdbcType=VARCHAR}
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DOUBLE}
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DOUBLE}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wyfx.business.entity.AlarmRecord">
        update alarm_record
        set record_time = #{recordTime,jdbcType=TIMESTAMP},
        aid = #{aid,jdbcType=BIGINT},
        bid = #{bid,jdbcType=BIGINT},
        pid = #{pid,jdbcType=BIGINT},
        is_view = #{isView,jdbcType=TINYINT},
        message = #{message,jdbcType=VARCHAR},
        send_name = #{sendName,jdbcType=VARCHAR},
        longitude = #{longitude,jdbcType=DOUBLE},
        latitude = #{latitude,jdbcType=DOUBLE}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectRecord" resultType="com.wyfx.business.entity.vo.AlarmRecordVo">
        SELECT
        alarm_record.id AS `id`,
        alarm_record.aid,
        alarm_record.pid AS pid,
        alarm_record.bid AS bid,
        alarm_record.record_time AS recordTime,
        alarm_type.type AS alarmType,
        alarm_type.tip_message AS content,
        project_info.project_name AS projectName,
        business_user.`name` AS `name`,
        business_user.user_name AS account,
        zidian_setting. NAME AS workType
        FROM
        alarm_record,
        alarm_type,
        project_info,
        business_user,
        zidian_setting
        WHERE
        alarm_record.aid = alarm_type.aid
        AND alarm_record.pid = project_info.pid
        AND alarm_record.bid = business_user.bid
        AND zidian_setting.zid = business_user.zidian_id
        AND business_user.business_id = #{alarmRecord.businessId}
        <if test="alarmRecord.pid != null">
            and alarm_record.pid = #{alarmRecord.pid}
        </if>
        <if test="alarmRecord.aid != null">
            and alarm_record.aid = #{alarmRecord.aid}
        </if>
        <if test="alarmRecord.bid != null">
            and alarm_record.bid = #{alarmRecord.bid}
        </if>
        <if test="alarmRecord.sendName != null">
            and alarm_record.send_name = #{alarmRecord.sendName}
        </if>
        <if test="alarmRecord.startTime != null">
            <if test="alarmRecord.endTime != null">
                and alarm_record.record_time between #{alarmRecord.startTime} and #{alarmRecord.endTime}
            </if>
        </if>
        order by record_time desc
    </select>

    <select id="selectRecordByAid" resultType="com.wyfx.business.entity.vo.AlarmRecordVo">
        SELECT a.id AS `id`,a.longitude,a.latitude,b.tip_message AS content,d.bid as bid,d.`name` AS
        `name`,d.`user_name` AS `account`,d.online_status as 'onlineStatus',e.color,e.`name` AS workType,a.record_time
        AS recordTime,a.is_view AS isView
        FROM alarm_record a,alarm_type b,business_user d,zidian_setting e,project_info c
        WHERE a.aid=b.aid AND a.bid=d.bid AND d.zidian_id=e.zid and a.pid = c.pid and d.business_id=#{businessId}
        <if test="aid != null">
            and a.aid = #{aid}
        </if>
        <if test="pid != null">
            and a.pid = #{pid}
        </if>
        order by record_time desc
    </select>

    <!--通过报警类型查询未读的报警消息 0未读 1 已读-->
    <select id="selectUnreadRecordByAid" resultType="java.lang.Long">
        SELECT a.id AS `id`
        FROM alarm_record a,alarm_type b,business_user d,zidian_setting e
        WHERE a.aid=b.aid AND a.bid=d.bid AND d.business_id=e.business_id AND d.zidian_id=e.zid
        and a.is_view = 0
        <if test="aid!=null">
            and a.aid = #{aid}
        </if>
    </select>


    <!--批量更新 报警信息为已读 0 未读 1 已读-->
    <update id="updateByIdsAndType">
        update alarm_record
        set is_view = 1
        where 1=1
        <if test="type!=null">
            and aid=#{type}
        </if>
        <if test="ids!=null">
            and id in
            <foreach item="id" index="index" close=")" separator="," open="(" collection="ids">
                #{id}
            </foreach>
        </if>

    </update>


    <!--导出报警记录 2020-3-3  b.tip_message as message-->
    <select id="exportExcelRecord" resultType="com.wyfx.business.entity.vo.AlarmRecordExcelVo">
        select a.id as `id`,b.type as type,a.pid as pid,c.project_name as projectName ,a.bid as bid ,d.`name`
        as`name`,d.user_name as account,b.tip_message as message,a.record_time as recordTime
        from alarm_record a,alarm_type b,project_info c,business_user d
        where a.aid = b.aid and a.pid = c.pid and a.bid = d.bid
        <if test="ids!=null">
            and a.id in
            <foreach item="id" index="index" close=")" separator="," open="(" collection="ids">#{id}</foreach>
        </if>
    </select>


    <select id="selectRecordToExcel" resultType="com.wyfx.business.entity.vo.AlarmRecordExcelVo">
        select a.id as `id`,b.type as type,a.pid as pid,c.project_name as projectName ,a.bid as bid ,d.`name` as
        `name`,d.user_name as account,a.message as message,a.record_time as recordTime
        from alarm_record a,alarm_type b,project_info c,business_user d
        where a.aid = b.aid and a.pid = c.pid and a.bid = d.bid
        <if test="alarmRecord.pid != null">
            and a.pid = #{alarmRecord.pid}
        </if>
        <if test="alarmRecord.aid != null">
            and a.aid = #{alarmRecord.aid}
        </if>
        <if test="alarmRecord.bid != null">
            and a.bid = #{alarmRecord.bid}
        </if>
        <if test="alarmRecord.sendName != null">
            and a.send_name = #{alarmRecord.sendName}
        </if>
        <if test="alarmRecord.startTime != null">
            <if test="alarmRecord.endTime != null">
                and a.record_time between #{alarmRecord.startTime} and #{alarmRecord.endTime}
            </if>
        </if>
        order by record_time desc
    </select>

</mapper>