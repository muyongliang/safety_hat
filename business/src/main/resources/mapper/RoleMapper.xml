<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyfx.business.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.wyfx.business.entity.Role">
        <constructor>
            <idArg column="role_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="role_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="modify_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="update_by" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="business_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        role_id, role_name, description, create_time, modify_time, create_by, update_by,
        business_id
    </sql>

    <!--<select id="selectByRoleName" resultType="map">
      select r.role_id,r.role_name,r.description,(case when b.user_type=3 then count(r.role_id) else 0 end) as num from role r
      left JOIN user_role u on r.role_id=u.role_id
      left join business_user b on u.user_id=b.bid
      where r.business_id=#{businessId}
      <if test="roleName!=null">
          and r.role_name=#{roleName}
      </if>
      GROUP BY r.role_id
    </select>-->

    <select id="selectByRoleName" resultType="map">
        select r.role_id,r.role_name,r.description,(case when b.user_type=3 then count(r.role_id) else 0 end) as num
        from role r
        left join role_business rb on r.role_id=rb.role_id
        left JOIN user_role u on r.role_id=u.role_id
        left join business_user b on u.user_id=b.bid
        where 1=1
        <if test="businessId!=null">
            and rb.business_id=#{businessId}
        </if>
        <if test="roleName!=null">
            and r.role_name=#{roleName}
        </if>
        GROUP BY r.role_id
    </select>

    <select id="selectByRoleNameNoDefault" resultType="map">
        select r.role_id,r.role_name,r.description,(case when b.user_type=3 then count(r.role_id) else 0 end) as num
        from role r
        left join role_business rb on r.role_id=rb.role_id
        left JOIN user_role u on r.role_id=u.role_id
        left join business_user b on u.user_id=b.bid
        where 1=1 and r.role_id not in (1,2,3,4)
        <if test="businessId!=null">
            and rb.business_id=#{businessId}
        </if>
        <if test="roleName!=null">
            and r.role_name=#{roleName}
        </if>
        GROUP BY r.role_id
    </select>

    <!--2019-11-30 通过ids查询角色名-->
    <select id="selectRoleNameByIds" resultMap="BaseResultMap">
        select
        role_name
        from role
        where role_id = in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!--查询所有角色-->
    <select id="selectAllRole" resultType="java.util.Map">
        select role_id,role_name
        from role
    </select>


    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where role_id = #{roleId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from role
        where role_id = #{roleId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.wyfx.business.entity.Role" useGeneratedKeys="true" keyProperty="roleId">
        insert into role (role_id, role_name, description,
        create_time, modify_time, create_by,
        update_by, business_id)
        values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR},
        #{updateBy,jdbcType=VARCHAR}, #{businessId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.wyfx.business.entity.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="businessId != null">
                business_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="businessId != null">
                #{businessId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wyfx.business.entity.Role">
        update role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="businessId != null">
                business_id = #{businessId,jdbcType=BIGINT},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wyfx.business.entity.Role">
        update role
        set role_name = #{roleName,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        create_by = #{createBy,jdbcType=VARCHAR},
        update_by = #{updateBy,jdbcType=VARCHAR},
        business_id = #{businessId,jdbcType=BIGINT}
        where role_id = #{roleId,jdbcType=BIGINT}
    </update>
</mapper>